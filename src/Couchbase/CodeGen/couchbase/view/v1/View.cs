// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: couchbase/view/v1/view.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Couchbase.Protostellar.View.V1 {

  /// <summary>Holder for reflection information generated from couchbase/view/v1/view.proto</summary>
  public static partial class ViewReflection {

    #region Descriptor
    /// <summary>File descriptor for couchbase/view/v1/view.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ViewReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chxjb3VjaGJhc2Uvdmlldy92MS92aWV3LnByb3RvEhFjb3VjaGJhc2Uudmll",
            "dy52MSKgCQoQVmlld1F1ZXJ5UmVxdWVzdBITCgtidWNrZXRfbmFtZRgIIAEo",
            "CRIcChRkZXNpZ25fZG9jdW1lbnRfbmFtZRgBIAEoCRIRCgl2aWV3X25hbWUY",
            "AiABKAkSEQoEc2tpcBgDIAEoDUgAiAEBEhIKBWxpbWl0GAQgASgNSAGIAQES",
            "UgoQc2Nhbl9jb25zaXN0ZW5jeRgFIAEoDjIzLmNvdWNoYmFzZS52aWV3LnYx",
            "LlZpZXdRdWVyeVJlcXVlc3QuU2NhbkNvbnNpc3RlbmN5SAKIAQESEwoGcmVk",
            "dWNlGAYgASgISAOIAQESEgoFZ3JvdXAYByABKAhIBIgBARIYCgtncm91cF9s",
            "ZXZlbBgJIAEoDUgFiAEBEhAKA2tleRgKIAEoDEgGiAEBEgwKBGtleXMYCyAD",
            "KAwSFgoJc3RhcnRfa2V5GAwgASgMSAeIAQESFAoHZW5kX2tleRgNIAEoDEgI",
            "iAEBEhoKDWluY2x1c2l2ZV9lbmQYDiABKAhICYgBARIdChBzdGFydF9rZXlf",
            "ZG9jX2lkGA8gASgJSAqIAQESGwoOZW5kX2tleV9kb2NfaWQYECABKAlIC4gB",
            "ARJECghvbl9lcnJvchgRIAEoDjItLmNvdWNoYmFzZS52aWV3LnYxLlZpZXdR",
            "dWVyeVJlcXVlc3QuRXJyb3JNb2RlSAyIAQESEgoFZGVidWcYEiABKAhIDYgB",
            "ARJFCgluYW1lc3BhY2UYEyABKA4yLS5jb3VjaGJhc2Uudmlldy52MS5WaWV3",
            "UXVlcnlSZXF1ZXN0Lk5hbWVzcGFjZUgOiAEBEj0KBW9yZGVyGBQgASgOMiku",
            "Y291Y2hiYXNlLnZpZXcudjEuVmlld1F1ZXJ5UmVxdWVzdC5PcmRlckgPiAEB",
            "InkKD1NjYW5Db25zaXN0ZW5jeRIgChxTQ0FOX0NPTlNJU1RFTkNZX05PVF9C",
            "T1VOREVEEAASIQodU0NBTl9DT05TSVNURU5DWV9SRVFVRVNUX1BMVVMQARIh",
            "Ch1TQ0FOX0NPTlNJU1RFTkNZX1VQREFURV9BRlRFUhACIjkKCUVycm9yTW9k",
            "ZRIXChNFUlJPUl9NT0RFX0NPTlRJTlVFEAASEwoPRVJST1JfTU9ERV9TVE9Q",
            "EAEiQAoJTmFtZXNwYWNlEhgKFE5BTUVTUEFDRV9QUk9EVUNUSU9OEAASGQoV",
            "TkFNRVNQQUNFX0RFVkVMT1BNRU5UEAEiMgoFT3JkZXISEwoPT1JERVJfQVND",
            "RU5ESU5HEAASFAoQT1JERVJfREVTQ0VORElORxABQgcKBV9za2lwQggKBl9s",
            "aW1pdEITChFfc2Nhbl9jb25zaXN0ZW5jeUIJCgdfcmVkdWNlQggKBl9ncm91",
            "cEIOCgxfZ3JvdXBfbGV2ZWxCBgoEX2tleUIMCgpfc3RhcnRfa2V5QgoKCF9l",
            "bmRfa2V5QhAKDl9pbmNsdXNpdmVfZW5kQhMKEV9zdGFydF9rZXlfZG9jX2lk",
            "QhEKD19lbmRfa2V5X2RvY19pZEILCglfb25fZXJyb3JCCAoGX2RlYnVnQgwK",
            "Cl9uYW1lc3BhY2VCCAoGX29yZGVyIv4BChFWaWV3UXVlcnlSZXNwb25zZRI2",
            "CgRyb3dzGAEgAygLMiguY291Y2hiYXNlLnZpZXcudjEuVmlld1F1ZXJ5UmVz",
            "cG9uc2UuUm93EkUKCW1ldGFfZGF0YRgCIAEoCzItLmNvdWNoYmFzZS52aWV3",
            "LnYxLlZpZXdRdWVyeVJlc3BvbnNlLk1ldGFEYXRhSACIAQEaLQoDUm93EgoK",
            "AmlkGAEgASgJEgsKA2tleRgCIAEoDBINCgV2YWx1ZRgDIAEoDBotCghNZXRh",
            "RGF0YRISCgp0b3RhbF9yb3dzGAEgASgEEg0KBWRlYnVnGAIgASgMQgwKCl9t",
            "ZXRhX2RhdGEyaQoLVmlld1NlcnZpY2USWgoJVmlld1F1ZXJ5EiMuY291Y2hi",
            "YXNlLnZpZXcudjEuVmlld1F1ZXJ5UmVxdWVzdBokLmNvdWNoYmFzZS52aWV3",
            "LnYxLlZpZXdRdWVyeVJlc3BvbnNlIgAwAULmAQopY29tLmNvdWNoYmFzZS5j",
            "bGllbnQucHJvdG9zdGVsbGFyLnZpZXcudjFQAVo8Z2l0aHViLmNvbS9jb3Vj",
            "aGJhc2UvZ29wcm90b3N0ZWxsYXIvZ2VucHJvdG8vdmlld192MTt2aWV3X3Yx",
            "qgIeQ291Y2hiYXNlLlByb3Rvc3RlbGxhci5WaWV3LlYxygIoQ291Y2hiYXNl",
            "XFByb3Rvc3RlbGxhclxHZW5lcmF0ZWRcVmlld1xWMeoCLENvdWNoYmFzZTo6",
            "UHJvdG9zdGVsbGFyOjpHZW5lcmF0ZWQ6OlZpZXc6OlYxYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Couchbase.Protostellar.View.V1.ViewQueryRequest), global::Couchbase.Protostellar.View.V1.ViewQueryRequest.Parser, new[]{ "BucketName", "DesignDocumentName", "ViewName", "Skip", "Limit", "ScanConsistency", "Reduce", "Group", "GroupLevel", "Key", "Keys", "StartKey", "EndKey", "InclusiveEnd", "StartKeyDocId", "EndKeyDocId", "OnError", "Debug", "Namespace", "Order" }, new[]{ "Skip", "Limit", "ScanConsistency", "Reduce", "Group", "GroupLevel", "Key", "StartKey", "EndKey", "InclusiveEnd", "StartKeyDocId", "EndKeyDocId", "OnError", "Debug", "Namespace", "Order" }, new[]{ typeof(global::Couchbase.Protostellar.View.V1.ViewQueryRequest.Types.ScanConsistency), typeof(global::Couchbase.Protostellar.View.V1.ViewQueryRequest.Types.ErrorMode), typeof(global::Couchbase.Protostellar.View.V1.ViewQueryRequest.Types.Namespace), typeof(global::Couchbase.Protostellar.View.V1.ViewQueryRequest.Types.Order) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Couchbase.Protostellar.View.V1.ViewQueryResponse), global::Couchbase.Protostellar.View.V1.ViewQueryResponse.Parser, new[]{ "Rows", "MetaData" }, new[]{ "MetaData" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Couchbase.Protostellar.View.V1.ViewQueryResponse.Types.Row), global::Couchbase.Protostellar.View.V1.ViewQueryResponse.Types.Row.Parser, new[]{ "Id", "Key", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Couchbase.Protostellar.View.V1.ViewQueryResponse.Types.MetaData), global::Couchbase.Protostellar.View.V1.ViewQueryResponse.Types.MetaData.Parser, new[]{ "TotalRows", "Debug" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ViewQueryRequest : pb::IMessage<ViewQueryRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ViewQueryRequest> _parser = new pb::MessageParser<ViewQueryRequest>(() => new ViewQueryRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ViewQueryRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Couchbase.Protostellar.View.V1.ViewReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ViewQueryRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ViewQueryRequest(ViewQueryRequest other) : this() {
      _hasBits0 = other._hasBits0;
      bucketName_ = other.bucketName_;
      designDocumentName_ = other.designDocumentName_;
      viewName_ = other.viewName_;
      skip_ = other.skip_;
      limit_ = other.limit_;
      scanConsistency_ = other.scanConsistency_;
      reduce_ = other.reduce_;
      group_ = other.group_;
      groupLevel_ = other.groupLevel_;
      key_ = other.key_;
      keys_ = other.keys_.Clone();
      startKey_ = other.startKey_;
      endKey_ = other.endKey_;
      inclusiveEnd_ = other.inclusiveEnd_;
      startKeyDocId_ = other.startKeyDocId_;
      endKeyDocId_ = other.endKeyDocId_;
      onError_ = other.onError_;
      debug_ = other.debug_;
      namespace_ = other.namespace_;
      order_ = other.order_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ViewQueryRequest Clone() {
      return new ViewQueryRequest(this);
    }

    /// <summary>Field number for the "bucket_name" field.</summary>
    public const int BucketNameFieldNumber = 8;
    private string bucketName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BucketName {
      get { return bucketName_; }
      set {
        bucketName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "design_document_name" field.</summary>
    public const int DesignDocumentNameFieldNumber = 1;
    private string designDocumentName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DesignDocumentName {
      get { return designDocumentName_; }
      set {
        designDocumentName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "view_name" field.</summary>
    public const int ViewNameFieldNumber = 2;
    private string viewName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ViewName {
      get { return viewName_; }
      set {
        viewName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "skip" field.</summary>
    public const int SkipFieldNumber = 3;
    private readonly static uint SkipDefaultValue = 0;

    private uint skip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Skip {
      get { if ((_hasBits0 & 1) != 0) { return skip_; } else { return SkipDefaultValue; } }
      set {
        _hasBits0 |= 1;
        skip_ = value;
      }
    }
    /// <summary>Gets whether the "skip" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSkip {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "skip" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSkip() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 4;
    private readonly static uint LimitDefaultValue = 0;

    private uint limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Limit {
      get { if ((_hasBits0 & 2) != 0) { return limit_; } else { return LimitDefaultValue; } }
      set {
        _hasBits0 |= 2;
        limit_ = value;
      }
    }
    /// <summary>Gets whether the "limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLimit {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLimit() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "scan_consistency" field.</summary>
    public const int ScanConsistencyFieldNumber = 5;
    private readonly static global::Couchbase.Protostellar.View.V1.ViewQueryRequest.Types.ScanConsistency ScanConsistencyDefaultValue = global::Couchbase.Protostellar.View.V1.ViewQueryRequest.Types.ScanConsistency.NotBounded;

    private global::Couchbase.Protostellar.View.V1.ViewQueryRequest.Types.ScanConsistency scanConsistency_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Couchbase.Protostellar.View.V1.ViewQueryRequest.Types.ScanConsistency ScanConsistency {
      get { if ((_hasBits0 & 4) != 0) { return scanConsistency_; } else { return ScanConsistencyDefaultValue; } }
      set {
        _hasBits0 |= 4;
        scanConsistency_ = value;
      }
    }
    /// <summary>Gets whether the "scan_consistency" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasScanConsistency {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "scan_consistency" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearScanConsistency() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "reduce" field.</summary>
    public const int ReduceFieldNumber = 6;
    private readonly static bool ReduceDefaultValue = false;

    private bool reduce_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Reduce {
      get { if ((_hasBits0 & 8) != 0) { return reduce_; } else { return ReduceDefaultValue; } }
      set {
        _hasBits0 |= 8;
        reduce_ = value;
      }
    }
    /// <summary>Gets whether the "reduce" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasReduce {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "reduce" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReduce() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "group" field.</summary>
    public const int GroupFieldNumber = 7;
    private readonly static bool GroupDefaultValue = false;

    private bool group_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Group {
      get { if ((_hasBits0 & 16) != 0) { return group_; } else { return GroupDefaultValue; } }
      set {
        _hasBits0 |= 16;
        group_ = value;
      }
    }
    /// <summary>Gets whether the "group" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGroup {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "group" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGroup() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "group_level" field.</summary>
    public const int GroupLevelFieldNumber = 9;
    private readonly static uint GroupLevelDefaultValue = 0;

    private uint groupLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint GroupLevel {
      get { if ((_hasBits0 & 32) != 0) { return groupLevel_; } else { return GroupLevelDefaultValue; } }
      set {
        _hasBits0 |= 32;
        groupLevel_ = value;
      }
    }
    /// <summary>Gets whether the "group_level" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGroupLevel {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "group_level" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGroupLevel() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 10;
    private readonly static pb::ByteString KeyDefaultValue = pb::ByteString.Empty;

    private pb::ByteString key_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Key {
      get { return key_ ?? KeyDefaultValue; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasKey {
      get { return key_ != null; }
    }
    /// <summary>Clears the value of the "key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearKey() {
      key_ = null;
    }

    /// <summary>Field number for the "keys" field.</summary>
    public const int KeysFieldNumber = 11;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_keys_codec
        = pb::FieldCodec.ForBytes(90);
    private readonly pbc::RepeatedField<pb::ByteString> keys_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<pb::ByteString> Keys {
      get { return keys_; }
    }

    /// <summary>Field number for the "start_key" field.</summary>
    public const int StartKeyFieldNumber = 12;
    private readonly static pb::ByteString StartKeyDefaultValue = pb::ByteString.Empty;

    private pb::ByteString startKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString StartKey {
      get { return startKey_ ?? StartKeyDefaultValue; }
      set {
        startKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "start_key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartKey {
      get { return startKey_ != null; }
    }
    /// <summary>Clears the value of the "start_key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartKey() {
      startKey_ = null;
    }

    /// <summary>Field number for the "end_key" field.</summary>
    public const int EndKeyFieldNumber = 13;
    private readonly static pb::ByteString EndKeyDefaultValue = pb::ByteString.Empty;

    private pb::ByteString endKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString EndKey {
      get { return endKey_ ?? EndKeyDefaultValue; }
      set {
        endKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "end_key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEndKey {
      get { return endKey_ != null; }
    }
    /// <summary>Clears the value of the "end_key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEndKey() {
      endKey_ = null;
    }

    /// <summary>Field number for the "inclusive_end" field.</summary>
    public const int InclusiveEndFieldNumber = 14;
    private readonly static bool InclusiveEndDefaultValue = false;

    private bool inclusiveEnd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool InclusiveEnd {
      get { if ((_hasBits0 & 64) != 0) { return inclusiveEnd_; } else { return InclusiveEndDefaultValue; } }
      set {
        _hasBits0 |= 64;
        inclusiveEnd_ = value;
      }
    }
    /// <summary>Gets whether the "inclusive_end" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInclusiveEnd {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "inclusive_end" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInclusiveEnd() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "start_key_doc_id" field.</summary>
    public const int StartKeyDocIdFieldNumber = 15;
    private readonly static string StartKeyDocIdDefaultValue = "";

    private string startKeyDocId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StartKeyDocId {
      get { return startKeyDocId_ ?? StartKeyDocIdDefaultValue; }
      set {
        startKeyDocId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "start_key_doc_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartKeyDocId {
      get { return startKeyDocId_ != null; }
    }
    /// <summary>Clears the value of the "start_key_doc_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartKeyDocId() {
      startKeyDocId_ = null;
    }

    /// <summary>Field number for the "end_key_doc_id" field.</summary>
    public const int EndKeyDocIdFieldNumber = 16;
    private readonly static string EndKeyDocIdDefaultValue = "";

    private string endKeyDocId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EndKeyDocId {
      get { return endKeyDocId_ ?? EndKeyDocIdDefaultValue; }
      set {
        endKeyDocId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "end_key_doc_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEndKeyDocId {
      get { return endKeyDocId_ != null; }
    }
    /// <summary>Clears the value of the "end_key_doc_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEndKeyDocId() {
      endKeyDocId_ = null;
    }

    /// <summary>Field number for the "on_error" field.</summary>
    public const int OnErrorFieldNumber = 17;
    private readonly static global::Couchbase.Protostellar.View.V1.ViewQueryRequest.Types.ErrorMode OnErrorDefaultValue = global::Couchbase.Protostellar.View.V1.ViewQueryRequest.Types.ErrorMode.Continue;

    private global::Couchbase.Protostellar.View.V1.ViewQueryRequest.Types.ErrorMode onError_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Couchbase.Protostellar.View.V1.ViewQueryRequest.Types.ErrorMode OnError {
      get { if ((_hasBits0 & 128) != 0) { return onError_; } else { return OnErrorDefaultValue; } }
      set {
        _hasBits0 |= 128;
        onError_ = value;
      }
    }
    /// <summary>Gets whether the "on_error" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOnError {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "on_error" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOnError() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "debug" field.</summary>
    public const int DebugFieldNumber = 18;
    private readonly static bool DebugDefaultValue = false;

    private bool debug_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Debug {
      get { if ((_hasBits0 & 256) != 0) { return debug_; } else { return DebugDefaultValue; } }
      set {
        _hasBits0 |= 256;
        debug_ = value;
      }
    }
    /// <summary>Gets whether the "debug" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDebug {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "debug" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDebug() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "namespace" field.</summary>
    public const int NamespaceFieldNumber = 19;
    private readonly static global::Couchbase.Protostellar.View.V1.ViewQueryRequest.Types.Namespace NamespaceDefaultValue = global::Couchbase.Protostellar.View.V1.ViewQueryRequest.Types.Namespace.Production;

    private global::Couchbase.Protostellar.View.V1.ViewQueryRequest.Types.Namespace namespace_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Couchbase.Protostellar.View.V1.ViewQueryRequest.Types.Namespace Namespace {
      get { if ((_hasBits0 & 512) != 0) { return namespace_; } else { return NamespaceDefaultValue; } }
      set {
        _hasBits0 |= 512;
        namespace_ = value;
      }
    }
    /// <summary>Gets whether the "namespace" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNamespace {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "namespace" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNamespace() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "order" field.</summary>
    public const int OrderFieldNumber = 20;
    private readonly static global::Couchbase.Protostellar.View.V1.ViewQueryRequest.Types.Order OrderDefaultValue = global::Couchbase.Protostellar.View.V1.ViewQueryRequest.Types.Order.Ascending;

    private global::Couchbase.Protostellar.View.V1.ViewQueryRequest.Types.Order order_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Couchbase.Protostellar.View.V1.ViewQueryRequest.Types.Order Order {
      get { if ((_hasBits0 & 1024) != 0) { return order_; } else { return OrderDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        order_ = value;
      }
    }
    /// <summary>Gets whether the "order" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOrder {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "order" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOrder() {
      _hasBits0 &= ~1024;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ViewQueryRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ViewQueryRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BucketName != other.BucketName) return false;
      if (DesignDocumentName != other.DesignDocumentName) return false;
      if (ViewName != other.ViewName) return false;
      if (Skip != other.Skip) return false;
      if (Limit != other.Limit) return false;
      if (ScanConsistency != other.ScanConsistency) return false;
      if (Reduce != other.Reduce) return false;
      if (Group != other.Group) return false;
      if (GroupLevel != other.GroupLevel) return false;
      if (Key != other.Key) return false;
      if(!keys_.Equals(other.keys_)) return false;
      if (StartKey != other.StartKey) return false;
      if (EndKey != other.EndKey) return false;
      if (InclusiveEnd != other.InclusiveEnd) return false;
      if (StartKeyDocId != other.StartKeyDocId) return false;
      if (EndKeyDocId != other.EndKeyDocId) return false;
      if (OnError != other.OnError) return false;
      if (Debug != other.Debug) return false;
      if (Namespace != other.Namespace) return false;
      if (Order != other.Order) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (BucketName.Length != 0) hash ^= BucketName.GetHashCode();
      if (DesignDocumentName.Length != 0) hash ^= DesignDocumentName.GetHashCode();
      if (ViewName.Length != 0) hash ^= ViewName.GetHashCode();
      if (HasSkip) hash ^= Skip.GetHashCode();
      if (HasLimit) hash ^= Limit.GetHashCode();
      if (HasScanConsistency) hash ^= ScanConsistency.GetHashCode();
      if (HasReduce) hash ^= Reduce.GetHashCode();
      if (HasGroup) hash ^= Group.GetHashCode();
      if (HasGroupLevel) hash ^= GroupLevel.GetHashCode();
      if (HasKey) hash ^= Key.GetHashCode();
      hash ^= keys_.GetHashCode();
      if (HasStartKey) hash ^= StartKey.GetHashCode();
      if (HasEndKey) hash ^= EndKey.GetHashCode();
      if (HasInclusiveEnd) hash ^= InclusiveEnd.GetHashCode();
      if (HasStartKeyDocId) hash ^= StartKeyDocId.GetHashCode();
      if (HasEndKeyDocId) hash ^= EndKeyDocId.GetHashCode();
      if (HasOnError) hash ^= OnError.GetHashCode();
      if (HasDebug) hash ^= Debug.GetHashCode();
      if (HasNamespace) hash ^= Namespace.GetHashCode();
      if (HasOrder) hash ^= Order.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DesignDocumentName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DesignDocumentName);
      }
      if (ViewName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ViewName);
      }
      if (HasSkip) {
        output.WriteRawTag(24);
        output.WriteUInt32(Skip);
      }
      if (HasLimit) {
        output.WriteRawTag(32);
        output.WriteUInt32(Limit);
      }
      if (HasScanConsistency) {
        output.WriteRawTag(40);
        output.WriteEnum((int) ScanConsistency);
      }
      if (HasReduce) {
        output.WriteRawTag(48);
        output.WriteBool(Reduce);
      }
      if (HasGroup) {
        output.WriteRawTag(56);
        output.WriteBool(Group);
      }
      if (BucketName.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(BucketName);
      }
      if (HasGroupLevel) {
        output.WriteRawTag(72);
        output.WriteUInt32(GroupLevel);
      }
      if (HasKey) {
        output.WriteRawTag(82);
        output.WriteBytes(Key);
      }
      keys_.WriteTo(output, _repeated_keys_codec);
      if (HasStartKey) {
        output.WriteRawTag(98);
        output.WriteBytes(StartKey);
      }
      if (HasEndKey) {
        output.WriteRawTag(106);
        output.WriteBytes(EndKey);
      }
      if (HasInclusiveEnd) {
        output.WriteRawTag(112);
        output.WriteBool(InclusiveEnd);
      }
      if (HasStartKeyDocId) {
        output.WriteRawTag(122);
        output.WriteString(StartKeyDocId);
      }
      if (HasEndKeyDocId) {
        output.WriteRawTag(130, 1);
        output.WriteString(EndKeyDocId);
      }
      if (HasOnError) {
        output.WriteRawTag(136, 1);
        output.WriteEnum((int) OnError);
      }
      if (HasDebug) {
        output.WriteRawTag(144, 1);
        output.WriteBool(Debug);
      }
      if (HasNamespace) {
        output.WriteRawTag(152, 1);
        output.WriteEnum((int) Namespace);
      }
      if (HasOrder) {
        output.WriteRawTag(160, 1);
        output.WriteEnum((int) Order);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DesignDocumentName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DesignDocumentName);
      }
      if (ViewName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ViewName);
      }
      if (HasSkip) {
        output.WriteRawTag(24);
        output.WriteUInt32(Skip);
      }
      if (HasLimit) {
        output.WriteRawTag(32);
        output.WriteUInt32(Limit);
      }
      if (HasScanConsistency) {
        output.WriteRawTag(40);
        output.WriteEnum((int) ScanConsistency);
      }
      if (HasReduce) {
        output.WriteRawTag(48);
        output.WriteBool(Reduce);
      }
      if (HasGroup) {
        output.WriteRawTag(56);
        output.WriteBool(Group);
      }
      if (BucketName.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(BucketName);
      }
      if (HasGroupLevel) {
        output.WriteRawTag(72);
        output.WriteUInt32(GroupLevel);
      }
      if (HasKey) {
        output.WriteRawTag(82);
        output.WriteBytes(Key);
      }
      keys_.WriteTo(ref output, _repeated_keys_codec);
      if (HasStartKey) {
        output.WriteRawTag(98);
        output.WriteBytes(StartKey);
      }
      if (HasEndKey) {
        output.WriteRawTag(106);
        output.WriteBytes(EndKey);
      }
      if (HasInclusiveEnd) {
        output.WriteRawTag(112);
        output.WriteBool(InclusiveEnd);
      }
      if (HasStartKeyDocId) {
        output.WriteRawTag(122);
        output.WriteString(StartKeyDocId);
      }
      if (HasEndKeyDocId) {
        output.WriteRawTag(130, 1);
        output.WriteString(EndKeyDocId);
      }
      if (HasOnError) {
        output.WriteRawTag(136, 1);
        output.WriteEnum((int) OnError);
      }
      if (HasDebug) {
        output.WriteRawTag(144, 1);
        output.WriteBool(Debug);
      }
      if (HasNamespace) {
        output.WriteRawTag(152, 1);
        output.WriteEnum((int) Namespace);
      }
      if (HasOrder) {
        output.WriteRawTag(160, 1);
        output.WriteEnum((int) Order);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (BucketName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BucketName);
      }
      if (DesignDocumentName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DesignDocumentName);
      }
      if (ViewName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ViewName);
      }
      if (HasSkip) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Skip);
      }
      if (HasLimit) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Limit);
      }
      if (HasScanConsistency) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ScanConsistency);
      }
      if (HasReduce) {
        size += 1 + 1;
      }
      if (HasGroup) {
        size += 1 + 1;
      }
      if (HasGroupLevel) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GroupLevel);
      }
      if (HasKey) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Key);
      }
      size += keys_.CalculateSize(_repeated_keys_codec);
      if (HasStartKey) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(StartKey);
      }
      if (HasEndKey) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(EndKey);
      }
      if (HasInclusiveEnd) {
        size += 1 + 1;
      }
      if (HasStartKeyDocId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StartKeyDocId);
      }
      if (HasEndKeyDocId) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(EndKeyDocId);
      }
      if (HasOnError) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) OnError);
      }
      if (HasDebug) {
        size += 2 + 1;
      }
      if (HasNamespace) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Namespace);
      }
      if (HasOrder) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Order);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ViewQueryRequest other) {
      if (other == null) {
        return;
      }
      if (other.BucketName.Length != 0) {
        BucketName = other.BucketName;
      }
      if (other.DesignDocumentName.Length != 0) {
        DesignDocumentName = other.DesignDocumentName;
      }
      if (other.ViewName.Length != 0) {
        ViewName = other.ViewName;
      }
      if (other.HasSkip) {
        Skip = other.Skip;
      }
      if (other.HasLimit) {
        Limit = other.Limit;
      }
      if (other.HasScanConsistency) {
        ScanConsistency = other.ScanConsistency;
      }
      if (other.HasReduce) {
        Reduce = other.Reduce;
      }
      if (other.HasGroup) {
        Group = other.Group;
      }
      if (other.HasGroupLevel) {
        GroupLevel = other.GroupLevel;
      }
      if (other.HasKey) {
        Key = other.Key;
      }
      keys_.Add(other.keys_);
      if (other.HasStartKey) {
        StartKey = other.StartKey;
      }
      if (other.HasEndKey) {
        EndKey = other.EndKey;
      }
      if (other.HasInclusiveEnd) {
        InclusiveEnd = other.InclusiveEnd;
      }
      if (other.HasStartKeyDocId) {
        StartKeyDocId = other.StartKeyDocId;
      }
      if (other.HasEndKeyDocId) {
        EndKeyDocId = other.EndKeyDocId;
      }
      if (other.HasOnError) {
        OnError = other.OnError;
      }
      if (other.HasDebug) {
        Debug = other.Debug;
      }
      if (other.HasNamespace) {
        Namespace = other.Namespace;
      }
      if (other.HasOrder) {
        Order = other.Order;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DesignDocumentName = input.ReadString();
            break;
          }
          case 18: {
            ViewName = input.ReadString();
            break;
          }
          case 24: {
            Skip = input.ReadUInt32();
            break;
          }
          case 32: {
            Limit = input.ReadUInt32();
            break;
          }
          case 40: {
            ScanConsistency = (global::Couchbase.Protostellar.View.V1.ViewQueryRequest.Types.ScanConsistency) input.ReadEnum();
            break;
          }
          case 48: {
            Reduce = input.ReadBool();
            break;
          }
          case 56: {
            Group = input.ReadBool();
            break;
          }
          case 66: {
            BucketName = input.ReadString();
            break;
          }
          case 72: {
            GroupLevel = input.ReadUInt32();
            break;
          }
          case 82: {
            Key = input.ReadBytes();
            break;
          }
          case 90: {
            keys_.AddEntriesFrom(input, _repeated_keys_codec);
            break;
          }
          case 98: {
            StartKey = input.ReadBytes();
            break;
          }
          case 106: {
            EndKey = input.ReadBytes();
            break;
          }
          case 112: {
            InclusiveEnd = input.ReadBool();
            break;
          }
          case 122: {
            StartKeyDocId = input.ReadString();
            break;
          }
          case 130: {
            EndKeyDocId = input.ReadString();
            break;
          }
          case 136: {
            OnError = (global::Couchbase.Protostellar.View.V1.ViewQueryRequest.Types.ErrorMode) input.ReadEnum();
            break;
          }
          case 144: {
            Debug = input.ReadBool();
            break;
          }
          case 152: {
            Namespace = (global::Couchbase.Protostellar.View.V1.ViewQueryRequest.Types.Namespace) input.ReadEnum();
            break;
          }
          case 160: {
            Order = (global::Couchbase.Protostellar.View.V1.ViewQueryRequest.Types.Order) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DesignDocumentName = input.ReadString();
            break;
          }
          case 18: {
            ViewName = input.ReadString();
            break;
          }
          case 24: {
            Skip = input.ReadUInt32();
            break;
          }
          case 32: {
            Limit = input.ReadUInt32();
            break;
          }
          case 40: {
            ScanConsistency = (global::Couchbase.Protostellar.View.V1.ViewQueryRequest.Types.ScanConsistency) input.ReadEnum();
            break;
          }
          case 48: {
            Reduce = input.ReadBool();
            break;
          }
          case 56: {
            Group = input.ReadBool();
            break;
          }
          case 66: {
            BucketName = input.ReadString();
            break;
          }
          case 72: {
            GroupLevel = input.ReadUInt32();
            break;
          }
          case 82: {
            Key = input.ReadBytes();
            break;
          }
          case 90: {
            keys_.AddEntriesFrom(ref input, _repeated_keys_codec);
            break;
          }
          case 98: {
            StartKey = input.ReadBytes();
            break;
          }
          case 106: {
            EndKey = input.ReadBytes();
            break;
          }
          case 112: {
            InclusiveEnd = input.ReadBool();
            break;
          }
          case 122: {
            StartKeyDocId = input.ReadString();
            break;
          }
          case 130: {
            EndKeyDocId = input.ReadString();
            break;
          }
          case 136: {
            OnError = (global::Couchbase.Protostellar.View.V1.ViewQueryRequest.Types.ErrorMode) input.ReadEnum();
            break;
          }
          case 144: {
            Debug = input.ReadBool();
            break;
          }
          case 152: {
            Namespace = (global::Couchbase.Protostellar.View.V1.ViewQueryRequest.Types.Namespace) input.ReadEnum();
            break;
          }
          case 160: {
            Order = (global::Couchbase.Protostellar.View.V1.ViewQueryRequest.Types.Order) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ViewQueryRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum ScanConsistency {
        [pbr::OriginalName("SCAN_CONSISTENCY_NOT_BOUNDED")] NotBounded = 0,
        [pbr::OriginalName("SCAN_CONSISTENCY_REQUEST_PLUS")] RequestPlus = 1,
        [pbr::OriginalName("SCAN_CONSISTENCY_UPDATE_AFTER")] UpdateAfter = 2,
      }

      public enum ErrorMode {
        [pbr::OriginalName("ERROR_MODE_CONTINUE")] Continue = 0,
        [pbr::OriginalName("ERROR_MODE_STOP")] Stop = 1,
      }

      public enum Namespace {
        [pbr::OriginalName("NAMESPACE_PRODUCTION")] Production = 0,
        [pbr::OriginalName("NAMESPACE_DEVELOPMENT")] Development = 1,
      }

      public enum Order {
        [pbr::OriginalName("ORDER_ASCENDING")] Ascending = 0,
        [pbr::OriginalName("ORDER_DESCENDING")] Descending = 1,
      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ViewQueryResponse : pb::IMessage<ViewQueryResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ViewQueryResponse> _parser = new pb::MessageParser<ViewQueryResponse>(() => new ViewQueryResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ViewQueryResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Couchbase.Protostellar.View.V1.ViewReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ViewQueryResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ViewQueryResponse(ViewQueryResponse other) : this() {
      rows_ = other.rows_.Clone();
      metaData_ = other.metaData_ != null ? other.metaData_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ViewQueryResponse Clone() {
      return new ViewQueryResponse(this);
    }

    /// <summary>Field number for the "rows" field.</summary>
    public const int RowsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Couchbase.Protostellar.View.V1.ViewQueryResponse.Types.Row> _repeated_rows_codec
        = pb::FieldCodec.ForMessage(10, global::Couchbase.Protostellar.View.V1.ViewQueryResponse.Types.Row.Parser);
    private readonly pbc::RepeatedField<global::Couchbase.Protostellar.View.V1.ViewQueryResponse.Types.Row> rows_ = new pbc::RepeatedField<global::Couchbase.Protostellar.View.V1.ViewQueryResponse.Types.Row>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Couchbase.Protostellar.View.V1.ViewQueryResponse.Types.Row> Rows {
      get { return rows_; }
    }

    /// <summary>Field number for the "meta_data" field.</summary>
    public const int MetaDataFieldNumber = 2;
    private global::Couchbase.Protostellar.View.V1.ViewQueryResponse.Types.MetaData metaData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Couchbase.Protostellar.View.V1.ViewQueryResponse.Types.MetaData MetaData {
      get { return metaData_; }
      set {
        metaData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ViewQueryResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ViewQueryResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!rows_.Equals(other.rows_)) return false;
      if (!object.Equals(MetaData, other.MetaData)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= rows_.GetHashCode();
      if (metaData_ != null) hash ^= MetaData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      rows_.WriteTo(output, _repeated_rows_codec);
      if (metaData_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MetaData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      rows_.WriteTo(ref output, _repeated_rows_codec);
      if (metaData_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MetaData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += rows_.CalculateSize(_repeated_rows_codec);
      if (metaData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MetaData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ViewQueryResponse other) {
      if (other == null) {
        return;
      }
      rows_.Add(other.rows_);
      if (other.metaData_ != null) {
        if (metaData_ == null) {
          MetaData = new global::Couchbase.Protostellar.View.V1.ViewQueryResponse.Types.MetaData();
        }
        MetaData.MergeFrom(other.MetaData);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            rows_.AddEntriesFrom(input, _repeated_rows_codec);
            break;
          }
          case 18: {
            if (metaData_ == null) {
              MetaData = new global::Couchbase.Protostellar.View.V1.ViewQueryResponse.Types.MetaData();
            }
            input.ReadMessage(MetaData);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            rows_.AddEntriesFrom(ref input, _repeated_rows_codec);
            break;
          }
          case 18: {
            if (metaData_ == null) {
              MetaData = new global::Couchbase.Protostellar.View.V1.ViewQueryResponse.Types.MetaData();
            }
            input.ReadMessage(MetaData);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ViewQueryResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Row : pb::IMessage<Row>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Row> _parser = new pb::MessageParser<Row>(() => new Row());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Row> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Couchbase.Protostellar.View.V1.ViewQueryResponse.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Row() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Row(Row other) : this() {
          id_ = other.id_;
          key_ = other.key_;
          value_ = other.value_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Row Clone() {
          return new Row(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private string id_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Id {
          get { return id_; }
          set {
            id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "key" field.</summary>
        public const int KeyFieldNumber = 2;
        private pb::ByteString key_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pb::ByteString Key {
          get { return key_; }
          set {
            key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "value" field.</summary>
        public const int ValueFieldNumber = 3;
        private pb::ByteString value_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pb::ByteString Value {
          get { return value_; }
          set {
            value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Row);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Row other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (Key != other.Key) return false;
          if (Value != other.Value) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Id.Length != 0) hash ^= Id.GetHashCode();
          if (Key.Length != 0) hash ^= Key.GetHashCode();
          if (Value.Length != 0) hash ^= Value.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Id.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Id);
          }
          if (Key.Length != 0) {
            output.WriteRawTag(18);
            output.WriteBytes(Key);
          }
          if (Value.Length != 0) {
            output.WriteRawTag(26);
            output.WriteBytes(Value);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Id.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Id);
          }
          if (Key.Length != 0) {
            output.WriteRawTag(18);
            output.WriteBytes(Key);
          }
          if (Value.Length != 0) {
            output.WriteRawTag(26);
            output.WriteBytes(Value);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Id.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
          }
          if (Key.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Key);
          }
          if (Value.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Value);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Row other) {
          if (other == null) {
            return;
          }
          if (other.Id.Length != 0) {
            Id = other.Id;
          }
          if (other.Key.Length != 0) {
            Key = other.Key;
          }
          if (other.Value.Length != 0) {
            Value = other.Value;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Id = input.ReadString();
                break;
              }
              case 18: {
                Key = input.ReadBytes();
                break;
              }
              case 26: {
                Value = input.ReadBytes();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Id = input.ReadString();
                break;
              }
              case 18: {
                Key = input.ReadBytes();
                break;
              }
              case 26: {
                Value = input.ReadBytes();
                break;
              }
            }
          }
        }
        #endif

      }

      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class MetaData : pb::IMessage<MetaData>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<MetaData> _parser = new pb::MessageParser<MetaData>(() => new MetaData());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<MetaData> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Couchbase.Protostellar.View.V1.ViewQueryResponse.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public MetaData() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public MetaData(MetaData other) : this() {
          totalRows_ = other.totalRows_;
          debug_ = other.debug_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public MetaData Clone() {
          return new MetaData(this);
        }

        /// <summary>Field number for the "total_rows" field.</summary>
        public const int TotalRowsFieldNumber = 1;
        private ulong totalRows_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ulong TotalRows {
          get { return totalRows_; }
          set {
            totalRows_ = value;
          }
        }

        /// <summary>Field number for the "debug" field.</summary>
        public const int DebugFieldNumber = 2;
        private pb::ByteString debug_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pb::ByteString Debug {
          get { return debug_; }
          set {
            debug_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as MetaData);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(MetaData other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (TotalRows != other.TotalRows) return false;
          if (Debug != other.Debug) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (TotalRows != 0UL) hash ^= TotalRows.GetHashCode();
          if (Debug.Length != 0) hash ^= Debug.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (TotalRows != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(TotalRows);
          }
          if (Debug.Length != 0) {
            output.WriteRawTag(18);
            output.WriteBytes(Debug);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (TotalRows != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(TotalRows);
          }
          if (Debug.Length != 0) {
            output.WriteRawTag(18);
            output.WriteBytes(Debug);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (TotalRows != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TotalRows);
          }
          if (Debug.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Debug);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(MetaData other) {
          if (other == null) {
            return;
          }
          if (other.TotalRows != 0UL) {
            TotalRows = other.TotalRows;
          }
          if (other.Debug.Length != 0) {
            Debug = other.Debug;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                TotalRows = input.ReadUInt64();
                break;
              }
              case 18: {
                Debug = input.ReadBytes();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                TotalRows = input.ReadUInt64();
                break;
              }
              case 18: {
                Debug = input.ReadBytes();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
